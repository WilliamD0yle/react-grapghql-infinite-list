{"version":3,"sources":["components/App/logo.svg","components/Repos/index.js","components/App/index.js","index.js"],"names":["module","exports","handleOnScroll","props","scrollTop","document","documentElement","body","scrollHeight","clientHeight","window","innerHeight","Math","ceil","onLoadMore","Repos","useEffect","addEventListener","loading","removeEventListener","data","repos","search","edges","className","map","i","node","key","src","owner","avatarUrl","alt","login","name","description","stargazers","totalCount","primaryLanguage","reposQuery","gql","formattedDate","moment","Date","subtract","format","query","App","logo","notifyOnNetworkStatusChange","variables","error","fetchMore","message","cursor","pageInfo","endCursor","updateQuery","prevResult","fetchMoreResult","newEdges","length","__typename","client","ApolloClient","uri","headers","Authorization","process","ReactDOM","render","getElementById"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,kC,yOCGrCC,G,MAAiB,SAAAC,GAEnB,IAAIC,EAAaC,SAASC,iBAAmBD,SAASC,gBAAgBF,WAAcC,SAASE,KAAKH,UAC9FI,EAAgBH,SAASC,iBAAmBD,SAASC,gBAAgBE,cAAiBH,SAASE,KAAKC,aACpGC,EAAeJ,SAASC,gBAAgBG,cAAgBC,OAAOC,YAC5CC,KAAKC,KAAKT,EAAYK,IAAiBD,GAExCL,EAAMW,eAqCjBC,EAlCD,SAAAZ,GAUV,GATAa,oBAAU,WAMN,OALAN,OAAOO,iBAAiB,SAAU,WAClCd,EAAMe,SACVhB,EAAeC,KAGJO,OAAOS,oBAAoB,SAAU,kBAAMjB,EAAeC,MAClE,CAACA,KAECA,EAAMiB,MAAQjB,EAAMe,QACrB,OAAO,yCAGd,IAAMG,EAAQlB,EAAMiB,KAAKE,OAAOC,OAAS,GACtC,OACF,wBAAIC,UAAU,QACZH,EAAMI,IAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACV,wBAAIC,IAAKF,EAAGF,UAAU,QACrB,yBAAKA,UAAU,UACd,yBAAKK,IAAKF,EAAKG,MAAMC,UAAWC,IAAKL,EAAKG,MAAMG,SAEjD,yBAAKT,UAAU,kBACd,sCAAQG,EAAKO,KAAb,eAAwBP,EAAKG,MAAMG,QACnC,2BAAIN,EAAKQ,aACT,qCAAWR,EAAKS,WAAWC,YAC1BV,EAAKW,gBAAkB,wCAAcX,EAAKW,gBAAgBJ,MAAY,W,qrBC/B7E,IAAMK,EAAaC,IAAH,KAiCVC,EADO,IAAIC,IAAO,IAAIC,MAAQC,SAAS,EAAG,SACrBC,OAAO,cAC5BC,EAAK,mBAAeL,EAAf,oBAiDIM,EA/CH,kBACX,yBAAKvB,UAAU,OACd,4BAAQA,UAAU,cACjB,yBAAKK,IAAKmB,IAAMxB,UAAU,WAAWQ,IAAI,SACzC,+CAED,kBAAC,IAAD,CACCiB,6BAA6B,EAC7BH,MAAOP,EACPW,UAAW,CACVJ,UAGA,YAA0C,IAAvC1B,EAAsC,EAAtCA,KAAMF,EAAgC,EAAhCA,QAASiC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACzB,OAAID,EAAc,2BAAIA,EAAME,SAE3B,kBAAC,EAAD,CACCnC,QAASA,EACTE,KAAMA,EACNN,WAAY,kBACXsC,EAAU,CACTF,UAAW,CACVJ,QACAQ,OAAQlC,EAAKE,OAAOiC,SAASC,WAE9BC,YAAa,SAACC,EAAD,GAAsC,IAAvBC,EAAsB,EAAtBA,gBACrBC,EAAWD,EAAgBrC,OAAOC,MAClCgC,EAAWI,EAAgBrC,OAAOiC,SACxC,OAAOK,EAASC,OACb,CACDvC,OAAQ,CACRwC,WAAYJ,EAAWpC,OAAOwC,WAC9BvC,MAAM,GAAD,mBAAMmC,EAAWpC,OAAOC,OAAxB,YAAkCqC,IACvCL,aAGCG,Y,eCzENK,G,MAAS,IAAIC,IAAa,CAC/BC,IAAK,iCACLC,QAAS,CACRC,cAAc,UAAD,OAAYC,gDAI3BC,IAASC,OACR,kBAAC,IAAD,CAAgBP,OAAQA,GACpB,kBAAC,EAAD,OAEJ1D,SAASkE,eAAe,W","file":"static/js/main.3294ef1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { useEffect } from \"react\";\nimport \"./Repos.css\";\n\nconst handleOnScroll = props => {\n    // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n    var scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\n    var scrollHeight = (document.documentElement && document.documentElement.scrollHeight) || document.body.scrollHeight;\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight;\n\n    if (scrolledToBottom) props.onLoadMore();\n};\n\nconst Repos = props => {\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n\t\t\tif (!props.loading) {\n\t\t\t\thandleOnScroll(props);\n\t\t\t}\n\t\t});\n        return window.removeEventListener(\"scroll\", () => handleOnScroll(props));\n    }, [props]);\n\n    if (!props.data && props.loading) {\n        return <p>Loading...</p>;\n    }\n\n\tconst repos = props.data.search.edges || [];\n    return (\n\t\t<ul className=\"list\">\n\t\t\t{repos.map(({ node }, i) => (\n\t\t\t\t<li key={i} className=\"Repo\">\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<img src={node.owner.avatarUrl} alt={node.owner.login} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column details\">\n\t\t\t\t\t\t<h3>{`${node.name} by ${node.owner.login}`}</h3>\n\t\t\t\t\t\t<p>{node.description}</p>\n\t\t\t\t\t\t<p>Stars: {node.stargazers.totalCount}</p>\n\t\t\t\t\t\t{node.primaryLanguage ? <p>Language: {node.primaryLanguage.name}</p> : null}\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n    );\n};\n\nexport default Repos;\n","import React from \"react\";\nimport moment from \"moment\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport Repos from \"../Repos/\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nconst reposQuery = gql`\n  query search($query: String!, $cursor: String) {\n    search(first: 10, query: $query, type: REPOSITORY, after: $cursor) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          ... on Repository {\n            name\n            owner{\n\t\t\t\tlogin\n\t\t\t\tavatarUrl\n\t\t\t   }\n\t\t\turl\n            description\n            stargazers {\n              totalCount\n            }\n            primaryLanguage {\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst date = new moment(new Date()).subtract(1, \"weeks\");\nconst formattedDate = date.format(\"YYYY-MM-DD\");\nconst query = `created:>${formattedDate} sort:stars-desc`;\n\nconst App = () => (\n\t<div className=\"App\">\n\t\t<header className=\"App-header\">\n\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t<h1>Trending Repos</h1>\n\t\t</header>\n\t\t<Query\n\t\t\tnotifyOnNetworkStatusChange={true}\n\t\t\tquery={reposQuery}\n\t\t\tvariables={{\n\t\t\t\tquery\n\t\t\t}}\n\t\t>\n\t\t\t{({ data, loading, error, fetchMore }) => {\n\t\t\t\tif (error) return <p>{error.message}</p>;\n\t\t\t\treturn (\n\t\t\t\t\t<Repos\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tonLoadMore={() =>\n\t\t\t\t\t\t\tfetchMore({\n\t\t\t\t\t\t\t\tvariables: {\n\t\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\t\tcursor: data.search.pageInfo.endCursor\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tupdateQuery: (prevResult, { fetchMoreResult }) => {\n\t\t\t\t\t\t\t\t\tconst newEdges = fetchMoreResult.search.edges;\n\t\t\t\t\t\t\t\t\tconst pageInfo = fetchMoreResult.search.pageInfo;\n\t\t\t\t\t\t\t\t\treturn newEdges.length\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\tsearch: {\n\t\t\t\t\t\t\t\t\t\t\t__typename: prevResult.search.__typename,\n\t\t\t\t\t\t\t\t\t\t\tedges: [...prevResult.search.edges, ...newEdges],\n\t\t\t\t\t\t\t\t\t\t\tpageInfo\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t: prevResult;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}}\n        </Query>\n\t</div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport './index.css';\n\nconst client = new ApolloClient({\n\turi: \"https://api.github.com/graphql\",\n\theaders: {\n\t\tAuthorization: `Bearer ${process.env.REACT_APP_GRAPHQL_TOKEN}`\n\t}\n});\n\nReactDOM.render(\n\t<ApolloProvider client={client}>\n    \t<App />\n\t</ApolloProvider>,\n\tdocument.getElementById(\"root\")\n);"],"sourceRoot":""}